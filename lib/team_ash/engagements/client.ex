defmodule TeamAsh.Engagements.Client do
  alias TeamAsh.Engagements
  use Ash.Resource,
    domain: Engagements,
    data_layer: AshPostgres.DataLayer

  postgres do
    table "clients"

    repo TeamAsh.Repo
  end

  resource do
    plural_name :clients
  end

  actions do
    # Exposes default built in actions to manage the resource
    defaults [:read, :destroy]

    create :create do
      primary? true
      accept [:name, :source, :owner, :closed_on]
    end

    update :update do
      primary? true
      accept [:name, :source, :owner, :closed_on]
    end

    # Defines custom read action which fetches post by id.
    read :by_id do
      # This action has one argument :id of type :uuid
      argument :id, :integer, allow_nil?: false
      # Tells us we expect this action to return a single result
      get? true
      # Filters the `:id` given in the argument
      # against the `id` of each element in the resource
      filter expr(id == ^arg(:id))
    end

    read :query do
      argument :query, :string, allow_nil?: false

      filter expr(contains(string_downcase(name), string_downcase(^arg(:query))))
    end
  end

  attributes do
    # Add an autogenerated UUID primary key called `:id`.
    integer_primary_key :id

    attribute :name, :string do
      allow_nil? false
    end

    attribute :owner, :string
    attribute :source, :string
    attribute :closed_on, :date
  end

end
